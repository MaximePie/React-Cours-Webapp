[{"D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\niveau3\\src\\reportWebVitals.js":"1","D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\niveau3\\src\\App.js":"2","D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\Niveau5Correction\\src\\index.js":"3","D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\Niveau5Correction\\src\\App.js":"4","D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\Niveau5Correction\\src\\reportWebVitals.js":"5","D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\Niveau5Correction\\src\\components\\Consignes.jsx":"6","D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\Niveau5Correction\\src\\reducer.js":"7"},{"size":362,"mtime":1612117497606,"results":"8","hashOfConfig":"9"},{"size":208,"mtime":1612117905914,"results":"10","hashOfConfig":"9"},{"size":693,"mtime":1612520212102,"results":"11","hashOfConfig":"12"},{"size":2245,"mtime":1641284390406,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1612117497606,"results":"15","hashOfConfig":"14"},{"size":583,"mtime":1612519913708,"results":"16","hashOfConfig":"12"},{"size":2349,"mtime":1612791970768,"results":"17","hashOfConfig":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pg207l",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"8h5ufs",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1loh10e",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},"D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\niveau3\\src\\reportWebVitals.js",[],"D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\niveau3\\src\\App.js",[],"D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\Niveau5Correction\\src\\index.js",[],["34","35"],"D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\Niveau5Correction\\src\\App.js",[],"D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\Niveau5Correction\\src\\reportWebVitals.js",[],"D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\Niveau5Correction\\src\\components\\Consignes.jsx",[],"D:\\Programmation\\3WA\\EntrainementReactJS\\11 - Redux\\Niveau5Correction\\src\\reducer.js",["36","37","38"],"const initialState = {\r\n  symbols: '',\r\n  result: '',\r\n  history: [],\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n\r\n  switch (action.type) {\r\n    case 'NUMBER_PRESSED':\r\n      return {\r\n        ...state,\r\n        symbols: state.symbols + action.value,\r\n      };\r\n\r\n    case 'RESET':\r\n      return initialState;\r\n\r\n    case 'ADD_OPERATOR':\r\n      const symbols = state.symbols + action.value;\r\n      return {\r\n        ...state,\r\n        symbols,\r\n      };\r\n\r\n    case 'CALCULATE':\r\n      const cadran = state.symbols.split('');\r\n      const operators = ['x', '/', '+', '-'];\r\n      let numbers = cadran.filter(element => !operators.includes(element));\r\n      let operatorsList = cadran.filter(element => operators.includes(element));\r\n      operators.forEach(operator => {\r\n        while(operatorsList.indexOf(operator) !== -1) {\r\n          operate(operator);\r\n        }\r\n      });\r\n\r\n      const result = numbers[0];\r\n\r\n      const history = [...state.history];\r\n      history.push({\r\n        operations: state.symbols,\r\n        result\r\n      });\r\n\r\n      return {\r\n        ...initialState,\r\n        history,\r\n        result,\r\n      };\r\n\r\n\r\n      /**\r\n       * Appliquer le calcul demandé par l'opérateur en fonction de sa position dans operatorsList\r\n       * @param operator String qui va contenir l'opérateur à appliquer. 'x', '/', '+', '-'\r\n       */\r\n      function operate(operator) {\r\n        const indexOfOperator = operatorsList.indexOf(operator);\r\n        const firstQuantity = parseFloat(numbers[indexOfOperator]);\r\n        const secondQuantity = parseFloat(numbers[indexOfOperator + 1]);\r\n        let resultat;\r\n\r\n        switch(operator) {\r\n          case 'x':\r\n            resultat = firstQuantity * secondQuantity;\r\n          break;\r\n          case '/':\r\n            resultat = firstQuantity / secondQuantity;\r\n          break;\r\n          case '+':\r\n            resultat = firstQuantity + secondQuantity;\r\n          break;\r\n          case '-':\r\n            resultat = firstQuantity - secondQuantity;\r\n          break;\r\n        }\r\n\r\n        numbers[indexOfOperator] = resultat;\r\n        numbers = [...numbers.filter((number, index) => index !== indexOfOperator + 1)];\r\n        operatorsList = [...operatorsList.filter((operator, index) => index !== indexOfOperator)];\r\n      }\r\n  }\r\n\r\n  return state;\r\n}\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":7,"column":1,"nodeType":"45","endLine":84,"endColumn":2},{"ruleId":"46","severity":1,"message":"47","line":9,"column":3,"nodeType":"48","messageId":"49","endLine":81,"endColumn":4},{"ruleId":"46","severity":1,"message":"47","line":62,"column":9,"nodeType":"48","messageId":"49","endLine":75,"endColumn":10},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]